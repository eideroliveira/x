// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: testdata.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Timestamp when the identity was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when the identity was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Identity status (e.g., ACTIVE means the identity is active)
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Public metadata accessible to all users
	MetadataPublic *structpb.Struct `protobuf:"bytes,5,opt,name=metadata_public,json=metadataPublic,proto3" json:"metadata_public,omitempty"`
	// User's email address
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// User's given name
	GivenName string `protobuf:"bytes,7,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	// User's family name
	FamilyName string `protobuf:"bytes,8,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	// User's birthday
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	// Whether the user has consented to terms and conditions (data consent)
	DataConsent bool `protobuf:"varint,10,opt,name=data_consent,json=dataConsent,proto3" json:"data_consent,omitempty"`
	// Number of sessions created by the identity
	TotalSessionsCreated uint32 `protobuf:"varint,101,opt,name=total_sessions_created,json=totalSessionsCreated,proto3" json:"total_sessions_created,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_testdata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Identity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Identity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Identity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Identity) GetMetadataPublic() *structpb.Struct {
	if x != nil {
		return x.MetadataPublic
	}
	return nil
}

func (x *Identity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Identity) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *Identity) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *Identity) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *Identity) GetDataConsent() bool {
	if x != nil {
		return x.DataConsent
	}
	return false
}

func (x *Identity) GetTotalSessionsCreated() uint32 {
	if x != nil {
		return x.TotalSessionsCreated
	}
	return 0
}

type UpdateIdentityInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public metadata for the identity.
	MetadataPublic *structpb.Struct `protobuf:"bytes,1,opt,name=metadata_public,json=metadataPublic,proto3" json:"metadata_public,omitempty"`
	// Given name of the identity.
	GivenName *string `protobuf:"bytes,2,opt,name=given_name,json=givenName,proto3,oneof" json:"given_name,omitempty"`
	// Family name of the identity.
	FamilyName *string `protobuf:"bytes,3,opt,name=family_name,json=familyName,proto3,oneof" json:"family_name,omitempty"`
	// Birthday of the identity.
	Birthday *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	// Whether the user has consented to terms and conditions (data consent)
	DataConsent *bool `protobuf:"varint,5,opt,name=data_consent,json=dataConsent,proto3,oneof" json:"data_consent,omitempty"`
}

func (x *UpdateIdentityInput) Reset() {
	*x = UpdateIdentityInput{}
	mi := &file_testdata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIdentityInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityInput) ProtoMessage() {}

func (x *UpdateIdentityInput) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityInput.ProtoReflect.Descriptor instead.
func (*UpdateIdentityInput) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateIdentityInput) GetMetadataPublic() *structpb.Struct {
	if x != nil {
		return x.MetadataPublic
	}
	return nil
}

func (x *UpdateIdentityInput) GetGivenName() string {
	if x != nil && x.GivenName != nil {
		return *x.GivenName
	}
	return ""
}

func (x *UpdateIdentityInput) GetFamilyName() string {
	if x != nil && x.FamilyName != nil {
		return *x.FamilyName
	}
	return ""
}

func (x *UpdateIdentityInput) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UpdateIdentityInput) GetDataConsent() bool {
	if x != nil && x.DataConsent != nil {
		return *x.DataConsent
	}
	return false
}

type EmailCreation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Email address for the new identity.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Password for the new identity.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Input data for creating the identity.
	Input *UpdateIdentityInput `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *EmailCreation) Reset() {
	*x = EmailCreation{}
	mi := &file_testdata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailCreation) ProtoMessage() {}

func (x *EmailCreation) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailCreation.ProtoReflect.Descriptor instead.
func (*EmailCreation) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{2}
}

func (x *EmailCreation) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailCreation) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EmailCreation) GetInput() *UpdateIdentityInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Creation:
	//
	//	*CreateIdentityRequest_EmailCreation
	Creation isCreateIdentityRequest_Creation `protobuf_oneof:"creation"`
}

func (x *CreateIdentityRequest) Reset() {
	*x = CreateIdentityRequest{}
	mi := &file_testdata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityRequest) ProtoMessage() {}

func (x *CreateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{3}
}

func (m *CreateIdentityRequest) GetCreation() isCreateIdentityRequest_Creation {
	if m != nil {
		return m.Creation
	}
	return nil
}

func (x *CreateIdentityRequest) GetEmailCreation() *EmailCreation {
	if x, ok := x.GetCreation().(*CreateIdentityRequest_EmailCreation); ok {
		return x.EmailCreation
	}
	return nil
}

type isCreateIdentityRequest_Creation interface {
	isCreateIdentityRequest_Creation()
}

type CreateIdentityRequest_EmailCreation struct {
	// Input data for creating an identity with email and password.
	EmailCreation *EmailCreation `protobuf:"bytes,1,opt,name=email_creation,json=emailCreation,proto3,oneof"`
}

func (*CreateIdentityRequest_EmailCreation) isCreateIdentityRequest_Creation() {}

type EmailRecovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Email address for identity recovery.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// New password to set
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *EmailRecovery) Reset() {
	*x = EmailRecovery{}
	mi := &file_testdata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailRecovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRecovery) ProtoMessage() {}

func (x *EmailRecovery) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRecovery.ProtoReflect.Descriptor instead.
func (*EmailRecovery) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{4}
}

func (x *EmailRecovery) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailRecovery) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type RecoverIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recovery method for the identity.
	//
	// Types that are assignable to Recovery:
	//
	//	*RecoverIdentityRequest_EmailRecovery
	Recovery isRecoverIdentityRequest_Recovery `protobuf_oneof:"recovery"`
}

func (x *RecoverIdentityRequest) Reset() {
	*x = RecoverIdentityRequest{}
	mi := &file_testdata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverIdentityRequest) ProtoMessage() {}

func (x *RecoverIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverIdentityRequest.ProtoReflect.Descriptor instead.
func (*RecoverIdentityRequest) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{5}
}

func (m *RecoverIdentityRequest) GetRecovery() isRecoverIdentityRequest_Recovery {
	if m != nil {
		return m.Recovery
	}
	return nil
}

func (x *RecoverIdentityRequest) GetEmailRecovery() *EmailRecovery {
	if x, ok := x.GetRecovery().(*RecoverIdentityRequest_EmailRecovery); ok {
		return x.EmailRecovery
	}
	return nil
}

type isRecoverIdentityRequest_Recovery interface {
	isRecoverIdentityRequest_Recovery()
}

type RecoverIdentityRequest_EmailRecovery struct {
	EmailRecovery *EmailRecovery `protobuf:"bytes,1,opt,name=email_recovery,json=emailRecovery,proto3,oneof"`
}

func (*RecoverIdentityRequest_EmailRecovery) isRecoverIdentityRequest_Recovery() {}

var File_testdata_proto protoreflect.FileDescriptor

var file_testdata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x78, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe3, 0x03, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0xc3, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x22, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x0d, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x39,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x78, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6b, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x78, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x6c, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x78, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42, 0xa5,
	0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x78, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x71, 0x6f, 0x72, 0x35, 0x2f, 0x78, 0x2f, 0x76, 0x33, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x78, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0xa2,
	0x02, 0x03, 0x4a, 0x54, 0x58, 0xaa, 0x02, 0x0e, 0x4a, 0x73, 0x6f, 0x6e, 0x78, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0xca, 0x02, 0x0e, 0x4a, 0x73, 0x6f, 0x6e, 0x78, 0x5c, 0x54,
	0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0xe2, 0x02, 0x1a, 0x4a, 0x73, 0x6f, 0x6e, 0x78, 0x5c,
	0x54, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4a, 0x73, 0x6f, 0x6e, 0x78, 0x3a, 0x3a, 0x54, 0x65,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testdata_proto_rawDescOnce sync.Once
	file_testdata_proto_rawDescData = file_testdata_proto_rawDesc
)

func file_testdata_proto_rawDescGZIP() []byte {
	file_testdata_proto_rawDescOnce.Do(func() {
		file_testdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_testdata_proto_rawDescData)
	})
	return file_testdata_proto_rawDescData
}

var file_testdata_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_testdata_proto_goTypes = []any{
	(*Identity)(nil),               // 0: jsonx.testdata.Identity
	(*UpdateIdentityInput)(nil),    // 1: jsonx.testdata.UpdateIdentityInput
	(*EmailCreation)(nil),          // 2: jsonx.testdata.EmailCreation
	(*CreateIdentityRequest)(nil),  // 3: jsonx.testdata.CreateIdentityRequest
	(*EmailRecovery)(nil),          // 4: jsonx.testdata.EmailRecovery
	(*RecoverIdentityRequest)(nil), // 5: jsonx.testdata.RecoverIdentityRequest
	(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
	(*structpb.Struct)(nil),        // 7: google.protobuf.Struct
}
var file_testdata_proto_depIdxs = []int32{
	6, // 0: jsonx.testdata.Identity.created_at:type_name -> google.protobuf.Timestamp
	6, // 1: jsonx.testdata.Identity.updated_at:type_name -> google.protobuf.Timestamp
	7, // 2: jsonx.testdata.Identity.metadata_public:type_name -> google.protobuf.Struct
	6, // 3: jsonx.testdata.Identity.birthday:type_name -> google.protobuf.Timestamp
	7, // 4: jsonx.testdata.UpdateIdentityInput.metadata_public:type_name -> google.protobuf.Struct
	6, // 5: jsonx.testdata.UpdateIdentityInput.birthday:type_name -> google.protobuf.Timestamp
	1, // 6: jsonx.testdata.EmailCreation.input:type_name -> jsonx.testdata.UpdateIdentityInput
	2, // 7: jsonx.testdata.CreateIdentityRequest.email_creation:type_name -> jsonx.testdata.EmailCreation
	4, // 8: jsonx.testdata.RecoverIdentityRequest.email_recovery:type_name -> jsonx.testdata.EmailRecovery
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_testdata_proto_init() }
func file_testdata_proto_init() {
	if File_testdata_proto != nil {
		return
	}
	file_testdata_proto_msgTypes[0].OneofWrappers = []any{}
	file_testdata_proto_msgTypes[1].OneofWrappers = []any{}
	file_testdata_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateIdentityRequest_EmailCreation)(nil),
	}
	file_testdata_proto_msgTypes[5].OneofWrappers = []any{
		(*RecoverIdentityRequest_EmailRecovery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testdata_proto_goTypes,
		DependencyIndexes: file_testdata_proto_depIdxs,
		MessageInfos:      file_testdata_proto_msgTypes,
	}.Build()
	File_testdata_proto = out.File
	file_testdata_proto_rawDesc = nil
	file_testdata_proto_goTypes = nil
	file_testdata_proto_depIdxs = nil
}
